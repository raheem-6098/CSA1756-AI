import math

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)


def check_winner(board):
    
    for row in board:
        if row[0] == row[1] == row[2] and row[0] != " ":
            return row[0]
    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] and board[0][col] != " ":
            return board[0][col]
    if board[0][0] == board[1][1] == board[2][2] and board[0][0] != " ":
        return board[0][0]
    if board[0][2] == board[1][1] == board[2][0] and board[0][2] != " ":
        return board[0][2]
    return None


def is_draw(board):
    for row in board:
        if " " in row:
            return False
    return True


def evaluate(board):
    winner = check_winner(board)
    if winner == "X":  
        return 1
    elif winner == "O":  
        return -1
    return 0 


def minimax(board, depth, is_maximizing):
    score = evaluate(board)
    if score == 1 or score == -1:
        return score
    if is_draw(board):
        return 0

    if is_maximizing:
        best_score = -math.inf
        for i in range(3):
            for j in range(3):
                if board[i][j] == " ":
                    board[i][j] = "X"
                    best_score = max(best_score, minimax(board, depth + 1, False))
                    board[i][j] = " "
        return best_score
    else:
        best_score = math.inf
        for i in range(3):
            for j in range(3):
                if board[i][j] == " ":
                    board[i][j] = "O"
                    best_score = min(best_score, minimax(board, depth + 1, True))
                    board[i][j] = " "
        return best_score


def ai_move(board):
    best_score = -math.inf
    best_move = None
    for i in range(3):
        for j in range(3):
            if board[i][j] == " ":
                board[i][j] = "X"
                score = minimax(board, 0, False)
                board[i][j] = " "
                if score > best_score:
                    best_score = score
                    best_move = (i, j)
    if best_move:
        board[best_move[0]][best_move[1]] = "X"


def tic_tac_toe():
    board = [[" " for _ in range(3)] for _ in range(3)]
    print("Welcome to Tic Tac Toe!")
    print("You are 'O' and AI is 'X'.")
    print_board(board)

    while True:
        
        player_move = input("Enter your move (row and column: 1 1 for top left): ").split()
        row, col = int(player_move[0]) - 1, int(player_move[1]) - 1
        if board[row][col] != " ":
            print("Invalid move! Try again.")
            continue
        board[row][col] = "O"
        print_board(board)

        
        if check_winner(board) == "O":
            print("Congratulations! You win!")
            break

        
        if is_draw(board):
            print("It's a draw!")
            break

        
        ai_move(board)
        print("AI's move:")
        print_board(board)

        
        if check_winner(board) == "X":
            print("AI wins! Better luck next time.")
            break

        
        if is_draw(board):
            print("It's a draw!")
            break

# Run the game
tic_tac_toe()
